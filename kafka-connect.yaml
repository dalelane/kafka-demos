apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnect
metadata:
  annotations:
    eventstreams.ibm.com/use-connector-resources: 'true'
  name: kafka-connect-cluster
  namespace: event-automation
spec:
  config:
    group.id: kafka-connect
    client.id: kafka-connect-client
    config.storage.topic: connect-configs
    offset.storage.topic: connect-offsets
    status.storage.topic: connect-status
    config.providers: file
    config.providers.file.class: org.apache.kafka.common.config.provider.DirectoryConfigProvider
  bootstrapServers: 'my-kafka-cluster-kafka-bootstrap.event-automation.svc:9095'
  resources:
    limits:
      cpu: 2048m
      memory: 2Gi
    requests:
      cpu: 2048m
      memory: 2Gi
  authentication:
    passwordSecret:
      password: password
      secretName: kafka-connect-credentials
    type: scram-sha-512
    username: kafka-connect-credentials
  template:
    buildConfig:
      pullSecret: ibm-entitlement-key
    connectContainer:
      imagePullPolicy: IfNotPresent
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      volumeMounts:
        - name: connect-creds-mqtt
          mountPath: /mnt/connect-creds-mqtt
        # - name: connect-creds-mastodon
        #   mountPath: /mnt/connect-creds-mastodon
        # - name: connect-creds-bluesky
        #   mountPath: /mnt/connect-creds-bluesky
        # - name: connect-creds-stocktrades
        #   mountPath: /mnt/connect-creds-stocktrades
        # - name: connect-creds-weather
        #   mountPath: /mnt/connect-creds-weather
        # - name: connect-creds-postgresql
        #   mountPath: /mnt/connect-creds-postgresql
        # - name: connect-cert-postgresql
        #   mountPath: /mnt/connect-cert-postgresql
        # - name: connect-creds-xbox
        #   mountPath: /mnt/connect-creds-xbox
        # - name: connect-schemas-ibmmq
        #   mountPath: /mnt/ibmmq-schemas
    pod:
      volumes:
        - name: connect-creds-mqtt
          configMap:
            name: connect-creds-mqtt
        # - name: connect-creds-mastodon
        #   configMap:
        #     name: connect-creds-mastodon
        # - name: connect-creds-bluesky
        #   configMap:
        #     name: connect-creds-bluesky
        # - name: connect-creds-stocktrades
        #   configMap:
        #     name: connect-creds-stocktrades
        # - name: connect-creds-weather
        #   configMap:
        #     name: connect-creds-weather
        # - name: connect-creds-postgresql
        #   secret:
        #     secretName: pgsqldemo-pguser-demouser
        # - name: connect-cert-postgresql
        #   secret:
        #     secretName: pgsqldemo-cluster-cert
        # - name: connect-creds-xbox
        #   configMap:
        #     name: connect-creds-xbox
        # - name: connect-schemas-ibmmq
        #   configMap:
        #     name: ibmmq-schemas
      imagePullSecrets: []
      metadata:
        annotations:
          cloudpakId: c8b82d189e7545f0892db9ef2731b90d
          productVersion: 11.5.1
          productID: 2a79e49111f44ec3acd89608e56138f5
          cloudpakName: IBM Cloud Pak for Integration
          productChargedContainers: kafka-connect-cluster-connect
          productCloudpakRatio: '2:1'
          productName: IBM Event Streams for Non Production
          eventstreams.production.type: CloudPakForIntegrationNonProduction
          productMetric: VIRTUAL_PROCESSOR_CORE
  tls:
    trustedCertificates:
      - certificate: ca.crt
        secretName: my-kafka-cluster-cluster-ca-cert
  replicas: 3
  build:
    output:
      type: docker
      image: image-registry.openshift-image-registry.svc:5000/event-automation/event-automation-demo:1.0.1
    plugins:
      # ---------------------------------------------------------------
      # demo-set : datagen
      # ---------------------------------------------------------------
      # "Loosehanger" data generator - generates random events based on a fictional clothing retailer
      #  Used for many of the tutorials at https://ibm.github.io/event-automation/tutorials
      - name: datagen
        artifacts:
          - type: jar
            url: https://github.com/IBM/kafka-connect-loosehangerjeans-source/releases/download/0.1.5/kafka-connect-loosehangerjeans-source-0.1.5-jar-with-dependencies.jar
          - artifact: apicurio-registry-serdes-avro-serde
            group: io.apicurio
            type: maven
            version: 2.6.5.Final
          - artifact: apicurio-registry-utils-converter
            group: io.apicurio
            type: maven
            version: 2.6.5.Final
      # ---------------------------------------------------------------
      # demo-set: IBM MQ
      # ---------------------------------------------------------------
      # MQ Source and Sink connectors
      #  Including support for XML messages in MQ
      - name: ibmmq
        artifacts:
          - type: jar
            url: https://github.com/ibm-messaging/kafka-connect-mq-source/releases/download/v2.2.0/kafka-connect-mq-source-2.2.0-jar-with-dependencies.jar
          - type: jar
            url: https://github.com/ibm-messaging/kafka-connect-mq-sink/releases/download/v2.2.1/kafka-connect-mq-sink-2.2.1-jar-with-dependencies.jar
          - type: jar
            url: https://github.com/ibm-messaging/kafka-connect-xml-converter/releases/download/v0.2.1/kafka-connect-xml-converter-0.2.1-jar-with-dependencies.jar
      # ---------------------------------------------------------------
      # demo-set: mqtt
      # ---------------------------------------------------------------
      - name: mqtt
        artifacts:
          - type: zip
            url: 'https://github.com/lensesio/stream-reactor/releases/download/7.4.5/kafka-connect-mqtt-7.4.5.zip'
      # ---------------------------------------------------------------
      # demo-set: mastodon
      # ---------------------------------------------------------------
      # Social media posts from Mastodon
      - name: mastodon
        artifacts:
          - type: jar
            url: 'https://github.com/dalelane/kafka-connect-mastodon-source/releases/download/0.0.3/kafka-connect-mastodon-source-0.0.3-jar-with-dependencies.jar'
      # ---------------------------------------------------------------
      # demo-set: bluesky
      # ---------------------------------------------------------------
      # Social media posts from Bluesky
      - name: bluesky
        artifacts:
          - type: jar
            url: 'https://github.com/dalelane/kafka-connect-bluesky-source/releases/download/0.0.1/kafka-connect-bluesky-source-0.0.1-jar-with-dependencies.jar'
      # ---------------------------------------------------------------
      # demo-set: stocktrades
      # ---------------------------------------------------------------
      # Stock trading activity from AlphaVantage
      - name: stocktrades
        artifacts:
          - type: jar
            url: https://github.com/dalelane/kafka-connect-stockprice-source/releases/download/v0.0.3/kafka-connect-stockprice-source-connector.jar
      # ---------------------------------------------------------------
      # demo-set: wikipedia
      # ---------------------------------------------------------------
      # Wikipedia page creations and edits
      - name: wikipedia
        artifacts:
          - type: jar
            url: 'https://github.com/dalelane/kafka-connect-wikipedia-source/releases/download/0.0.2/kafka-connect-wikipedia-source-0.0.2-jar-with-dependencies.jar'
      # ---------------------------------------------------------------
      # demo-set: postgresql
      # ---------------------------------------------------------------
      # Change-data-capture connector for PostgreSQL databases
      - name: postgresql
        artifacts:
          - artifact: debezium-connector-postgres
            group: io.debezium
            type: maven
            version: 2.7.3.Final
          - artifact: apicurio-registry-serdes-avro-serde
            group: io.apicurio
            type: maven
            version: 2.5.10.Final
          - artifact: apicurio-registry-utils-converter
            group: io.apicurio
            type: maven
            version: 2.5.10.Final
      # ---------------------------------------------------------------
      # demo-set: weather
      # ---------------------------------------------------------------
      # Weather updates
      - name: weather
        artifacts:
          - artifact: camel-weather-kafka-connector
            group: org.apache.camel.kafkaconnector
            type: maven
            version: 0.11.5
      # ---------------------------------------------------------------
      # demo-set: jdbc
      # ---------------------------------------------------------------
      # JDBC sink connector - writing Kafka messages to a database
      - name: jdbc
        artifacts:
          - type: zip
            url: https://github.com/Aiven-Open/jdbc-connector-for-apache-kafka/releases/download/v6.10.0/jdbc-connector-for-apache-kafka-6.10.0.zip
      # ---------------------------------------------------------------
      # demo-set: Xbox
      # ---------------------------------------------------------------
      # Xbox live - social updates from Xbox
      - name: xbox
        artifacts:
          - type: jar
            url: https://github.com/dalelane/kafka-connect-xboxlive-source/releases/download/0.1.3/kafka-connect-xboxlive-source-0.1.3-jar-with-dependencies.jar
      # ---------------------------------------------------------------
      # demo-set: HTTP POST
      # ---------------------------------------------------------------
      # sending Kafka messages to a web service with HTTP POST requests
      - name: http
        artifacts:
          - type: zip
            url: https://github.com/Aiven-Open/http-connector-for-apache-kafka/releases/download/v0.7.0/http-connector-for-apache-kafka-0.7.0.zip
